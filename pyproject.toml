[project]
name = "daily-profit-model"
version = "0.1.0"
description = "A predictive model to score trading accounts based on the likelihood and magnitude of making profits, aiding in hedging decisions."
readme = "README.md"
requires-python = ">=3.12"
authors = [
    { name = "Carlos Rico-Ospina", email = "carlosricojr@gmail.com" }
]
keywords = ["finance", "prop trading", "machine learning", "hedging", "prediction"]

dependencies = [
    # Core ML and data processing
    "lightgbm>=4.6.0",
    "numpy>=2.2.6",
    "pandas>=2.2.3",
    "scikit-learn>=1.6.1",
    "scipy>=1.10.0",
    "joblib>=1.2.0",
    "featuretools>=1.31.0",
    "woodwork>=0.31.0",
    # ML model optimization and interpretation
    "optuna>=4.3.0",
    "shap>=0.47.2",
    # Database and data storage
    "sqlalchemy>=1.4.36,<2.0",
    # API and configuration
    "requests>=2.32.3",
    # Data validation and quality
    "great-expectations>=0.15.0",
    "pydantic>=1.10.0",
    "pyod>=1.0.0",
    # Monitoring and observability
    "prometheus-client>=0.15.0",
    "structlog>=22.3.0",
    "opentelemetry-api>=1.15.0",
    "opentelemetry-sdk>=1.15.0",
    # Performance monitoring and utilities
    "psutil>=5.9.0",
    "tqdm>=4.67.1",
    # Dashboard and visualization (production)
    "plotly>=5.12.0",
    "dash>=2.8.0",
    "dash-bootstrap-components>=1.2.0",
    "matplotlib>=3.6.0",
    # Workflow orchestration
    "apache-airflow>=3.0.2",
    "apache-airflow-providers-postgres>=6.2.0",
    "xxhash>=3.5.0",
    "dask>=2025.5.1",
]

[project.urls]
"Homepage" = "https://github.com/carlosricojr/daily-profit-model"
"Repository" = "https://github.com/carlosricojr/daily-profit-model"

[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[dependency-groups]
dev = [
    # Testing
    "pytest>=8.4.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    
    # Code quality and linting
    "ruff>=0.11.13",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "sqlparse>=0.5.3",
    
    # Development visualization and analysis
    "seaborn>=0.12.0",
    "jupyter>=1.0.0",
    "ipython>=8.0.0",
    
    # Documentation
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    
    # Development utilities
    "pre-commit>=3.0.0",
    "ipdb>=0.13.0",
]

[tool.pytest.ini_options]
filterwarnings = [
    # Ignore deprecation warnings for DataValidator in tests
    "ignore:DataValidator is deprecated:DeprecationWarning:preprocessing.data_validator",
    # Ignore resource warnings from logging handlers
    "ignore:unclosed file.*:ResourceWarning",
]
